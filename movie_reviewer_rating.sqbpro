<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/ling/Desktop/DB_SQL/rating.db"/><window><current_tab id="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="456"/><expanded_item id="0" parent="-1"/><expanded_item id="1" parent="-1"/><expanded_item id="2" parent="-1"/><expanded_item id="3" parent="-1"/></tab_structure><tab_browse><current_table name="Rating"/><column_widths data="AAAAAQAAAAoATQBvAHYAaQBlAAAAAQAAAAAAAAAA"/><sort column="0" order="0"/></tab_browse><tab_sql><sql name="SQL 1">/*There are 3 tables. Here's the schema: 

Movie ( mID, title, year, director ) 
English: There is a movie with ID number mID, a title, a release year, and a director. 

Reviewer ( rID, name ) 
English: The reviewer with ID number rID has a certain name. 

Rating ( rID, mID, stars, ratingDate ) 
English: The reviewer rID gave the movie mID a number of stars rating (1-5) on a certain ratingDate. */
/***************************************************/

/*Q1  Find the titles of all movies directed by Steven Spielberg. */
select title
from Movie
where director = &quot;Steven Spielberg&quot;;

/*Q2 Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. */
select distinct year
from Movie,Rating
where Movie.mID=Rating.mID and stars &gt;=4
order by year;

/*Q3 Find the titles of all movies that have no ratings */
select title
from Movie
where mID in (select mID from Movie) and mID not in (select mID from Rating);

/*Q4 Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. */
select name
from reviewer 
where rID in (select rID from Rating where ratingDate is NULL);

/*Q5 Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. */
select name, title, stars, ratingDate
from Reviewer, Movie, Rating
where Reviewer.rID=Rating.rID and movie.mID=rating.mID
order by name, title, stars;

/*Q6 For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie. */
select name, title
from Reviewer, Movie, Rating R1, Rating R2
where movie.mID=R1.mID and R1.rID=reviewer.rID
	and movie.mID=R2.mID and R2.rID= reviewer.rID
	and R1.ratingDate &lt; R2.ratingDate and R1.stars &lt; R2.stars;

/*Q7 For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title. 
select title, max(stars)
from Movie, Rating
where movie.mID=rating.mID
group by rating.mID 
order by title;</sql><current_tab id="0"/></tab_sql></sqlb_project>
